perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
train=sample(nrow(heart),floor(nrow(heart)*.75))
model1=glm(chd~.,data=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formuladata=heart[train,],family=binomial(link = "logit"))
model3=glm(chd~age,data=heart[train,],family=binomial(link = "logit"))
#Performance sur Test:
true.class=heart[-train,]$chd
pred=predict(model1,heart[-train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model3,heart[-train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
#Prédiction sur la base d'apprentissage:
true.class=heart[train,]$chd
pred=predict(model1,heart[train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model2,heart[train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model3,heart[train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
model2=glm(model.glm.step$formuladata=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formula,data=heart[train,],family=binomial(link = "logit"))
train=sample(nrow(heart),floor(nrow(heart)*.75))
model1=glm(chd~.,data=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formula,data=heart[train,],family=binomial(link = "logit"))
model3=glm(chd~age,data=heart[train,],family=binomial(link = "logit"))
#Performance sur Test:
true.class=heart[-train,]$chd
pred=predict(model1,heart[-train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model3,heart[-train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
#Prédiction sur la base d'apprentissage:
true.class=heart[train,]$chd
pred=predict(model1,heart[train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model2,heart[train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model3,heart[train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1])
plot(perf.train.2, add=TRUE, col=colors[2])
plot(perf.train.3, add=TRUE, col=colors[3])
title(main='ROC - train')
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3])
plot(perf.1, col='red')
plot(perf.2, add=TRUE, col='green')
plot(perf.3, add=TRUE, col='blue')
title(main='ROC - test')
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3])
```
train=sample(nrow(heart),floor(nrow(heart)*.75))
model1=glm(chd~.,data=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formula,data=heart[train,],family=binomial(link = "logit"))
model3=glm(chd~age,data=heart[train,],family=binomial(link = "logit"))
#Performance sur Test:
true.class=heart[-train,]$chd
pred=predict(model1,heart[-train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model3,heart[-train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
#Prédiction sur la base d'apprentissage:
true.class=heart[train,]$chd
pred=predict(model1,heart[train,],type='response')
perf.train.1=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model2,heart[train,],type='response')
perf.train.2=performance(prediction(pred,true.class),"tpr", "fpr")
pred=predict(model3,heart[train,],type='response')
perf.train.3=performance(prediction(pred,true.class),"tpr", "fpr")
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1])
plot(perf.train.2, add=TRUE, col=colors[2])
plot(perf.train.3, add=TRUE, col=colors[3])
title(main='ROC - train')
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3])
plot(perf.1, col='red')
plot(perf.2, add=TRUE, col='green')
plot(perf.3, add=TRUE, col='blue')
title(main='ROC - test')
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3])
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1],main='ROC - train')
plot(perf.train.2, add=TRUE, col=colors[2])
plot(perf.train.3, add=TRUE, col=colors[3])
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3])
plot(perf.1, col=colors[1],main='ROC - test')
plot(perf.2, add=TRUE, col=colors[2])
plot(perf.3, add=TRUE, col=colors[3])
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3])
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3],lty=1)
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2)
plot(perf.train.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.train.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3],lty=1,lwd=2)
plot(perf.1, col=colors[1],main='ROC - test',lwd=2)
plot(perf.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3],lty=1,lwd=2)
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs')
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs')
plot(perf.train.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.train.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3],lty=1,lwd=2)
plot(perf.1, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs')
plot(perf.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3],lty=1,lwd=2)
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.6)
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.6,cex.lab=.6)
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8,cex.lab=.6)
perf.train.1
perf.train.1=performance(prediction(pred,true.class),"tpr", "fpr","auc")
auc.train.1=performance(prediction(pred,true.class),"auc")
auc.train.1
as.numeric(auc.train.1)
set.seed(123)
set.seed(123)
train=sample(nrow(heart),floor(nrow(heart)*.75))
model1=glm(chd~.,data=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formula,data=heart[train,],family=binomial(link = "logit"))
model3=glm(chd~age,data=heart[train,],family=binomial(link = "logit"))
#Performance sur Test:
true.class=heart[-train,]$chd
pred=predict(model1,heart[-train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
auc.1=performance(prediction(pred,true.class),"auc")
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
auc.2=performance(prediction(pred,true.class),"auc")
pred=predict(model3,heart[-train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.3=performance(prediction(pred,true.class),"auc")
#Prédiction sur la base d'apprentissage:
true.class=heart[train,]$chd
pred=predict(model1,heart[train,],type='response')
perf.train.1=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.1=performance(prediction(pred,true.class),"auc")
pred=predict(model2,heart[train,],type='response')
perf.train.2=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.2=performance(prediction(pred,true.class),"auc")
pred=predict(model3,heart[train,],type='response')
perf.train.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.3=performance(prediction(pred,true.class),"auc")
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.train.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.train.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3],lty=1,lwd=2)
plot(perf.1, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=c('complet','step','1'),col=colors[1:3],lty=1,lwd=2)
names(auc.1)
auc.1
auc.1$yvalues
auc.1$y.values
auc.1@y.values
set.seed(123)
train=sample(nrow(heart),floor(nrow(heart)*.75))
model1=glm(chd~.,data=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formula,data=heart[train,],family=binomial(link = "logit"))
model3=glm(chd~age,data=heart[train,],family=binomial(link = "logit"))
#Performance sur Test:
true.class=heart[-train,]$chd
pred=predict(model1,heart[-train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
auc.1=performance(prediction(pred,true.class),"auc")@y.values
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
auc.2=performance(prediction(pred,true.class),"auc")@y.values
pred=predict(model3,heart[-train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.3=performance(prediction(pred,true.class),"auc")@y.values
#Prédiction sur la base d'apprentissage:
true.class=heart[train,]$chd
pred=predict(model1,heart[train,],type='response')
perf.train.1=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.1=performance(prediction(pred,true.class),"auc")@y.values
pred=predict(model2,heart[train,],type='response')
perf.train.2=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.2=performance(prediction(pred,true.class),"auc")@y.values
pred=predict(model3,heart[train,],type='response')
perf.train.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.3=performance(prediction(pred,true.class),"auc")@y.values
auc.train.3
auc.train.2
auc.train.1
paste(c('complet','step','1'),c(auc.1,auc.2,auc.3))
paste(c('complet','step','1'),signif(c(auc.1,auc.2,auc.3),2))
signif(c(auc.1,auc.2,auc.3),2)
round(c(auc.1,auc.2,auc.3),2)
v
c(auc.1,auc.2,auc.3)
as.matrix(c(auc.1,auc.2,auc.3))
c(c(auc.1,auc.2,auc.3))
round(as.matrix(c(auc.1,auc.2,auc.3)),3)
round(cor(c(auc.1,auc.2,auc.3)),3)
cor(c(auc.1,auc.2,auc.3))
cor(as.matrix(c(auc.1,auc.2,auc.3)))
c(auc.1,auc.2,auc.3)
as.matrxi(c(auc.1,auc.2,auc.3))
as.matrix(c(auc.1,auc.2,auc.3))
auc.3
as.numeric(auc.3)
set.seed(123)
train=sample(nrow(heart),floor(nrow(heart)*.75))
model1=glm(chd~.,data=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formula,data=heart[train,],family=binomial(link = "logit"))
model3=glm(chd~age,data=heart[train,],family=binomial(link = "logit"))
#Performance sur Test:
true.class=heart[-train,]$chd
pred=predict(model1,heart[-train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
auc.1=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
auc.2=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
pred=predict(model3,heart[-train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.3=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
#Prédiction sur la base d'apprentissage:
true.class=heart[train,]$chd
pred=predict(model1,heart[train,],type='response')
perf.train.1=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.1=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
pred=predict(model2,heart[train,],type='response')
perf.train.2=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.2=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
pred=predict(model3,heart[train,],type='response')
perf.train.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.3=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
c(auc.1,auc.2,auc.3)
round(c(auc.1,auc.2,auc.3),2)
round(c(auc.1,auc.2,auc.3),3)
round(c(auc.1,auc.2,auc.3),4)
paste(c('complet','step','var1'),round(c(auc.1,auc.2,auc.3),4))
paste(c('complet','step','var1'),'auc=',round(c(auc.1,auc.2,auc.3),4))
paste(c('complet','step','var1'),'- auc=',round(c(auc.1,auc.2,auc.3),4))
paste(c('complet','step','var1'),'-auc=',round(c(auc.1,auc.2,auc.3),4))
set.seed(123)
train=sample(nrow(heart),floor(nrow(heart)*.75))
model1=glm(chd~.,data=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formula,data=heart[train,],family=binomial(link = "logit"))
model3=glm(chd~age,data=heart[train,],family=binomial(link = "logit"))
#Performance sur Test:
true.class=heart[-train,]$chd
pred=predict(model1,heart[-train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
auc.1=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
auc.2=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
pred=predict(model3,heart[-train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.3=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
#Prédiction sur la base d'apprentissage:
true.class=heart[train,]$chd
pred=predict(model1,heart[train,],type='response')
perf.train.1=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.1=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
pred=predict(model2,heart[train,],type='response')
perf.train.2=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.2=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
pred=predict(model3,heart[train,],type='response')
perf.train.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.3=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.train.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.train.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright",legend=paste(c('complet','step','var1'),
'-auc=',round(c(auc.train.1,auc.train.2,auc.train.3),4)),
col=colors[1:3],lty=1,lwd=2)
plot(perf.1, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=paste(c('complet','step','var1'),
'-auc=',round(c(auc.1,auc.2,auc.3),4)),col=colors[1:3],lty=1,lwd=2)
perf.train.1=performance(prediction(pred,true.class),"tpr", "fpr",fpr.stop=0.5)
perf.train.1
signif(auc.2-auc.1,3)
perf.train.1=performance(prediction(pred,true.class),"tnr", "fnr")
perf.train.2=performance(prediction(pred,true.class),"tnr", "fnr")
perf.train.3=performance(prediction(pred,true.class),"tnr", "fnr")
perf.3=performance(prediction(pred,true.class),"tnr", "fnr")
perf.2=performance(prediction(pred,true.class),"tnr", "fnr")
perf.1=performance(prediction(pred,true.class),"tnr", "fnr")
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.train.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.train.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright",legend=paste(c('complet','step','var1'),'-auc=',round(c(auc.train.1,auc.train.2,auc.train.3),4)),col=colors[1:3],lty=1,lwd=2,cex=.6)
plot(perf.1, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=paste(c('complet','step','var1'),'-auc=',round(c(auc.1,auc.2,auc.3),4)),col=colors[1:3],lty=1,lwd=2,cex=.6)
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.train.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.train.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright",legend=paste(c('complet','step','var1'),'-auc=',round(c(auc.train.1,auc.train.2,auc.train.3),4)),col=colors[1:3],lty=1,lwd=2,cex=.6)
plot(perf.1, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=paste(c('complet','step','var1'),'-auc=',round(c(auc.1,auc.2,auc.3),4)),col=colors[1:3],lty=1,lwd=2,cex=.6)
```
perf.1
perf.2
perf.3
plot(perf.1, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.3, add=TRUE, col=colors[3],lwd=2)
plot(perf.1, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.2, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
perfn.2=performance(prediction(pred,true.class),"tnr", "fnr")
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
train=sample(nrow(heart),floor(nrow(heart)*.75))
model1=glm(chd~.,data=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formula,data=heart[train,],family=binomial(link = "logit"))
model3=glm(chd~age,data=heart[train,],family=binomial(link = "logit"))
true.class=heart[-train,]$chd
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
perfn.2=performance(prediction(pred,true.class),"tnr", "fnr")
auc.2=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
perf.2
perf.2@y.values
mean(perf.2@y.values)
cor(perf.2@y.values)
as.vector(perf.2@y.values)
mean(as.vector(perf.2@y.values))
mean(as.matrix(perf.2@y.values))
mean(as.numeric(perf.2@y.values))
as.numeric(perf.2@y.values)
as.matrix(perf.2@y.values)
perf.2@y.values
perf.2@y.values[:]
as.vector(perf.2@y.values)
perf.2@y.values[1]
perf.2@y.values[1,]
dim(perf.2@y.values)
t=perf.2@y.values
dim(t)
t
as.vector(r)
as.vector(t)
t=as.vector(t)
dim(t)
length(t)
t[1]
t[1][1]
unlist(perf.2@y.values)
mean(unlist(perf.2@y.values))
pred=predict(model3,heart[-train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
perfn.3=performance(prediction(pred,true.class),"tnr", "fnr")
auc.3=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
mean(unlist(perf.3@y.values))
auc.3
mean(unlist(perfn.3@y.values))
mean(unlist(perf.3@y.values))
auc.3
unlist(perf.3@x.values)
diff(unlist(perf.3@x.values))
diff(unlist(perf.3@x.values))*unlist(perf.3@y.values)
length(perf.3@y.values)
unlist(perf.3@x.values)
t=unlist(perf.3@x.values)
length(t)
t=unlist(perf.3@y.values)
length(t)
t=unlist(perf.3@x.values)
b=diff(t)
length(b)
c(diff(unlist(perf.3@x.values)),.01)*unlist(perf.3@y.values)
sum(c(diff(unlist(perf.3@x.values)),.01)*unlist(perf.3@y.values))
auc.3
steps=diff(unlist(perfn.3@x.values))
steps
steps[-1]
tail(steps)
tail(steps,1)
set.seed(123)
train=sample(nrow(heart),floor(nrow(heart)*.75))
model1=glm(chd~.,data=heart[train,],family=binomial(link = "logit"))
model2=glm(model.glm.step$formula,data=heart[train,],family=binomial(link = "logit"))
model3=glm(chd~age,data=heart[train,],family=binomial(link = "logit"))
#Performance sur Test:
true.class=heart[-train,]$chd
pred=predict(model1,heart[-train,],type='response')
perf.1=performance(prediction(pred,true.class),"tpr", "fpr")
perfn.1=performance(prediction(pred,true.class),"tnr", "fnr")
auc.1=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
steps=diff(unlist(perfn.1@x.values))
aucn.1=sum(c(steps,tail(steps,1))*unlist(perfn.1@y.values))
pred=predict(model2,heart[-train,],type='response')
perf.2=performance(prediction(pred,true.class),"tpr", "fpr")
perfn.2=performance(prediction(pred,true.class),"tnr", "fnr")
auc.2=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
steps=diff(unlist(perfn.2@x.values))
aucn.2=sum(c(steps,tail(steps,1))*unlist(perfn.2@y.values))
pred=predict(model3,heart[-train,],type='response')
perf.3=performance(prediction(pred,true.class),"tpr", "fpr")
perfn.3=performance(prediction(pred,true.class),"tnr", "fnr")
auc.3=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
steps=diff(unlist(perfn.3@x.values))
aucn.3=sum(c(steps,tail(steps,1))*unlist(perfn.3@y.values))
#Prédiction sur la base d'apprentissage:
true.class=heart[train,]$chd
pred=predict(model1,heart[train,],type='response')
perfn.train.1=performance(prediction(pred,true.class),"tnr", "fnr")
perf.train.1=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.1=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
steps=diff(unlist(perfn.train.1@x.values))
aucn.train.1=sum(c(steps,tail(steps,1))*unlist(perfn.train.1@y.values))
pred=predict(model2,heart[train,],type='response')
perfn.train.2=performance(prediction(pred,true.class),"tnr", "fnr")
perf.train.2=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.2=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
steps=diff(unlist(perfn.train.2@x.values))
aucn.train.2=sum(c(steps,tail(steps,1))*unlist(perfn.train.2@y.values))
pred=predict(model3,heart[train,],type='response')
perfn.train.3=performance(prediction(pred,true.class),"tnr", "fnr")
perf.train.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.3=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
steps=diff(unlist(perfn.train.3@x.values))
aucn.train.3=sum(c(steps,tail(steps,1))*unlist(perfn.train.3@y.values))
par(mfrow=c(1,2));
plot(perf.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.train.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.train.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright",legend=paste(c('complet','step','var1'),'-auc=',round(c(auc.train.1,auc.train.2,auc.train.3),4)),col=colors[1:3],lty=1,lwd=2,cex=.6)
plot(perf.1, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux positifs',ylab='Taux de vrais positifs',cex.main=.8)
plot(perf.2, add=TRUE, col=colors[2],lwd=2)
plot(perf.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=paste(c('complet','step','var1'),'-auc=',round(c(auc.1,auc.2,auc.3),4)),col=colors[1:3],lty=1,lwd=2,cex=.6)
plot(perfn.train.1, col=colors[1],main='ROC - train',lwd=2,xlab='Taux de faux négatifs',ylab='Taux de vrais négatifs',cex.main=.8)
plot(perfn.train.2, add=TRUE, col=colors[2],lwd=2)
plot(perfn.train.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright",legend=paste(c('complet','step','var1'),'-auc=',round(c(aucn.train.1,aucn.train.2,aucn.train.3),4)),col=colors[1:3],lty=1,lwd=2,cex=.6)
plot(perfn.1, col=colors[1],main='ROC - test',lwd=2,xlab='Taux de faux négatifs',ylab='Taux de vrais négatifs',cex.main=.8)
plot(perfn.2, add=TRUE, col=colors[2],lwd=2)
plot(perfn.3, add=TRUE, col=colors[3],lwd=2)
legend("bottomright", legend=paste(c('complet','step','var1'),'-auc=',round(c(aucn.1,aucn.2,aucn.3),4)),col=colors[1:3],lty=1,lwd=2,cex=.6)
auc.1
aucn.1
pred=predict(model3,heart[train,],type='response')
perf.train.3=performance(prediction(pred,true.class),"tpr", "fpr")
auc.train.3=as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
unlist((performance(prediction(pred,true.class),"auc")@y.values))
as.numeric(performance(prediction(pred,true.class),"auc")@y.values)
F=as.numeric(summary(model.glm.step)$fstatistic);
F
model.glm.step=step(null, scope=list(lower=null, upper=full),direction="both",trace=0)
Coeffs=round(as.matrix(summary(model.glm.step)$coefficients[,c(1,4)]),3);
signif=rep("",nrow(Coeffs));
signif[which(Coeffs[,2]<.1)]="\\textbullet";
signif[which(Coeffs[,2]<.05)]="*";
signif[which(Coeffs[,2]<.01)]="**";
signif[which(Coeffs[,2]<.001)]="***";
Coeffs=cbind(Coeffs,signif)
F=as.numeric(summary(model.glm.step)$fstatistic);
F
pv=pf(F[1],F[2],F[3],lower.tail=FALSE)
pv
null=glm(chd~1, data=heart,family=binomial(link = "logit"))
full=glm(chd~., data=heart,family=binomial(link = "logit"))
model.glm.step=step(null, scope=list(lower=null, upper=full),direction="both",trace=0)
Coeffs=round(as.matrix(summary(model.glm.step)$coefficients[,c(1,4)]),3);
signif=rep("",nrow(Coeffs));
signif[which(Coeffs[,2]<.1)]="\\textbullet";
signif[which(Coeffs[,2]<.05)]="*";
signif[which(Coeffs[,2]<.01)]="**";
signif[which(Coeffs[,2]<.001)]="***";
Coeffs=cbind(Coeffs,signif)
F=as.numeric(summary(model.glm.step)$fstatistic);
pv=pf(F[1],F[2],F[3],lower.tail=FALSE)
print(xtable(Coeffs,align=rep("c",4),caption='Coefficients estimés du modèle sélectionné',digits = c(0,2,5,0),label="tab:coeffs"),sanitize.text.function=identity)
pv
model.glm.step=step(null, scope=list(lower=null, upper=full),direction="both",trace=0)
Coeffs=round(as.matrix(summary(model.glm.step)$coefficients[,c(1,4)]),3);
signif=rep("",nrow(Coeffs));
signif[which(Coeffs[,2]<.1)]="\\textbullet";
signif[which(Coeffs[,2]<.05)]="*";
signif[which(Coeffs[,2]<.01)]="**";
signif[which(Coeffs[,2]<.001)]="***";
Coeffs=cbind(Coeffs,signif)
print(xtable(Coeffs,align=rep("c",4),caption='Coefficients estimés du modèle sélectionné',digits = c(0,2,5,0),label="tab:coeffs"),sanitize.text.function=identity)
Coeffs
model.glm.step=step(null, scope=list(lower=null, upper=full),direction="both",trace=0)
Coeffs=signif(as.matrix(summary(model.glm.step)$coefficients[,c(1,4)]),3);
signif=rep("",nrow(Coeffs));
signif[which(Coeffs[,2]<.1)]="\\textbullet";
signif[which(Coeffs[,2]<.05)]="*";
signif[which(Coeffs[,2]<.01)]="**";
signif[which(Coeffs[,2]<.001)]="***";
Coeffs=cbind(Coeffs,signif)
print(xtable(Coeffs,align=rep("c",4),caption='Coefficients estimés du modèle sélectionné',digits = c(0,2,5,0),label="tab:coeffs"),sanitize.text.function=identity)
6.17e-06 /3.46e-05
(6.17e-06 /3.46e-05)^-1
plot(model.lda.1,main='LDA : Iris',cex=.5,font=3)
plot(model.lda.1,main='LDA : Iris',cex=.5,font=3)
plot(model.lda.1,main='LDA : Iris',cex=.5,font=2)
